rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /services/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'provider';
    }
    match /bookings/{bookingId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.providerId);
      allow write: if request.auth != null && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.providerId);
    }
    match /reviews/{reviewId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.authorId;
    }
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
    }
    match /messages/{messageId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.senderId;
    }
    match /pushTokens/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
    match /disputes/{disputeId} {
      allow read, write: if request.auth != null && (request.auth.uid == resource.data.customerId || request.auth.uid == resource.data.providerId || request.auth.token.role == 'admin');
    }
  }
}
